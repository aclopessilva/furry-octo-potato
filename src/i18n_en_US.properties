iComb=Interative Combinatorics in Internet
iMath=iMath / IME - USP
versao=Version
universeDeck=Card deck
universeFoot=Football teams
C(n,p)=C(n,p)
A(n,p)=A(n,p)
n!=n!
n^p=n^p
two=2
three=3
four=4
five=5
six=6
seven=7
eight=8
nine=9
ten=10
1=1
2=2
3=3
4=4
5=5
6=6
7=7
8=8
9=9
10=10
11=11
12=12
13=13
14=14
15=15
16=16
17=17
18=18
19=19
20=20
newDrawing=New Drawing
close=Close
hereIsYourSolution=Here is your solution!
whatToDoWith=What to do with?
numberOfPossibilities=Number of possibilities
changeConstruction=Change Construction
iAmDone=I am Done!
validateConstruction=Validate Construction
elements=elements
suchThat=such that
and=and
about_and=choose configurations to define the elements of properties
update=update
delete=delete
listOfStages=List of Stages
drawings=Drawings
jack=Jack
queen=Queen
king=King
ace=Ace
clubs=Clubs
diamonds=Diamonds
hearts=Hearts
spades=Spades
of=of
value=value
suit=suit
add=add
multiply=multiply
is=is
isNot=is not
isIn=is in
isNotIn=is not in
noProperty=no property
oneProperty=one property
twoProperties=two properties
addStage=Add Stage
confirmFormula=Confirm Formula
verifyStage=Verify Stage
eraseThisStage=Erase
helpOnConstruction=Help on Construction
cancel=Cancel
formula=Formula
typeCtrlClickForMultipleSelection=Type ctrl+click for multiple selection
iWant=I want
elementsVerifying=elements verifying
construction=Construction
newStage=New
a32CardPack=a 32 card pack
a52CardPack=a 52 card pack
changeUniverse=Change Universe
elementsTakenIn=elements taken in
theSetOfSubsetsWith=The set of subsets with
validateUniverse=Validate Universe
universe=Universe
windowShowUniverse=Current Universe
iWantSubsets=I want subsets
elementsChoosenIn=elements choosen in 
changeExercise=Change Exercise
back2start=Back
validateExercise=Validate
exercises=Exercises
exerciseNumber=Exercise nº
chooseAnExercise=Choose an Exercise
smEx1Description=2 cards out of 32 with 1 Queen, 1 Ace
smEx1LongDescription=With a 32-card pack, how many two-card hands is it possible to form with exactly 1 queen and exactly 1 ace?
smEx2Description=5 cards out of 32 with 2 Hearts, 2 Spades
smEx2LongDescription=With a 32-card pack, how many five-card hands is it possible to form with exactly 2 hearts and exactly 2 spades?
smEx3Description=8 cards out of 52 with 1 Ace, 2 Kings, 2 Jacks
smEx3LongDescription=With a 52-card pack, how many eight-card hands is it possible to form with exactly 1 ace, 2 kings and 2 jacks?
smEx4Description=8 cards out of 32 with 4 Aces, 4 Kings
smEx4LongDescription=With a 32-card pack, how many eight-card hands is it possible to form with exactly 4 aces and 4 kings?
smEx5Description=20  cards out of 32 with 3 Aces, 4 Spades, 16 Reds
smEx5LongDescription=With a 32-card pack, how many twenty-card hands is it possible to form with  3 aces, 4 spades and 16 reds?
smEx6Description=12  cards out of 32 with 7 Hearts, 4 Aces, 2 Spades
smEx6LongDescription=With a 32-card pack, how many twelve-card hands is it possible to form with at least seven hearts,  exactly 4 aces, 2 spades and nothing else?
smEx7Description=18  cards out of 32 with 6 Diamonds, 4 Blacks, 4 Jacks, 4 Aces
smEx7LongDescription=With a 32-card pack, how many eighteen-card hands is it possible to form with 6 diamonds,  at most 4 blacks, exactly 4 jacks and exactly 4 aces?
smEx8Description=13 cards out of 32 with 1 Hearts, 5 blacks, 4 Aces
smEx8LongDescription=With a 32-card pack, how many thirteen-card hands is it possible to form with at least 1 hearts, exactly 4 blacks and exactly 4 aces?
smEx9Description=13  cards out of 32 with 12 Reds, 4 Diamonds, 3 Aces
smEx9LongDescription=With a 32-card pack, how many thirteen-card hands is it possible to form with 12 reds, exactly 3 aces and at most 4 diamonds?
smEx10Description=5 figure set with 2 odd figures
smEx10LongDescription=How many five-figure sets is it possible to form with exactly two odd figures?
threeDots=...
chooseOption=Choose one option
emptyString=
supressSelection=Supress Selection
modifySelection=Modify Selection
ok=Ok
elementsSuch=elements such that
stage=Stage
exerciseSend=Send solution
exerciseSave=Save solution
red=red
black=black
startExercise=Start
clue=Tip
solve=Solve Exercise
help=Help
seeUniverse=Show Universe
exerciseAndClue=Exercise / Hint
createAnswer=Create Answer
invalid_universe=Invalid universe set

# icomb/ui/DrawingPanel.java:
drawingClickImage1=Click the image to generate another configuration

evaluationMessage01=One element could not belong to more than one condition!
evaluationMessage02=None element of Universe set respect the informed constraints. Each stage must select at least one element.
evaluationMessage03=The constraints informed select elements (in the Universe set) that should not be in this exercise.
evaluationMessage04=This stage change the distribution of the target elements. It select elements that should be in different stages. For instance, the elements ? and ? should be in different stages.
evaluationMessage05=The selected condition is probably wright, but the number of elements is not correct.
evaluationMessage06=This selection change the target distribution of some elements.
evaluationMessage07=Some element are going to be present in any combination, that could not happen.
evaluationMessage08=More than one stage are going to select this element.
evaluationMessage09=Some invalid elements are been selected.
evaluationMessage10=There are elements that are not been selected. Ex: ?
evaluationMessage11=Invalid calculation

startExercise-dica=Starts resolution exercise
help-dica=Click here tor open the help window of iComb
createAnswer-dica=Construct an answer-model to the exercise (one stage model that solve it)
changeExercise-dica=Click here to start the generation of a new exercise
solve-dica=Open panel to start resolution
back2start-dica=Back to start

newStage-dica=The final solution of the exercise will be using one or more stages.\nEach stage must contain part of answer set, defining numbers of elements and properties that must satisfy.
iWant-dica=It set the number of elements that will be selected.\nThe following fields will define the restrictions that selection must meet.

# src/icomb/ui/StagePanel.java
msgE = and
choiceNumberOfPrepositions-dica = Choose the number of properties to define the stage set
choiceAttribute1-dica = Choose the definition of stage, if value or suit
choiceRelation1-dica = Choose the relation type that define the stage set
choiceElements1-dica = Choose the element type to define the stage set
inNotInSet = Select values
inNotInSet-dica = Select the values to the 'pertinence' type property to the set
choiceAttribute2-dica = Choose the stage set, if value or suit
choiceRelation2-dica = Choose the relation type that will define the stage
choiceElements2-dica = Choose the elements type that will define the stage
verifyStage-dica = Verify is this stage is valid. After click in this button, you must provide the \n total amount of elements in this stage (how many possibilities to this stage)
choiceNumbers-dica = Choose the number of elements in this stage set
choiceFormula-dica = Choose the formula type to be used to get the number of elements in this stage set
choiceN-dica = Choose the number of elements in this stage
choiceP-dica = Choose the number of combination terms in this stage

# src/icomb/ui/ChooseUniversePanel.java
ok-dica = Após definido o número de elementos neste estágio clique neste botão
cancel-dica = Se desejar cancelar esta fórmula clique aqui
addStage-dica = Se o número de elementos do estágio estiver correto, clique aqui

# src/icomb/ui/ListPanel.java
choiceAction-dica = Após definir todos os estágios escolha como eles serão agrupados para formar o conjunto final

# src/icomb/ui/NewStageButtonPanel.java
msgStgFirst=Select the options to build the first stage...
msgLMSsuc_sent=The construction was successfully sent to the server!
msgLMSsuc_store=The construction was successfully saved!
msgLMSfail_sent=The construction could not be sent to the server...
msgLMSfail_store=The construction could not be saved...

# icomb/ui/ConstructionPanel.java
errSystemCreatNot=Sorry, but it must have occurred an internal error. I could not certify that it was the construction of an exercise ...

resetConstruction=Reset
resetConstruction-dica=That command will delete all stages and\n and open a new construction from scratch.  
eraseThisStage-dica=That command will delete the current stage not changing those stages that were previously cnfirmed.
changeConstruction-dica=Click here to update the construction.
seeUniverse-dica=Click here to see all the elements of the exercise's universe.
send-dica=Click here to evaluate the solution.
openFile=Open File
openFile-dica = Click here in order to open a new iComb file
validateExercise-dica = After the exercise loading, click here to start the exercise resolution

# src/icomb/ui/DefinedUniversePanel.java
universe_empty=Please, select the Universe set of the exercise

#
helpWindow = Help Window
helpButtonBack = Back
helpButtonGo = Next
helpButtonStart = Start
helpButtonPrint = Print

help1title = 1 iComb
help1p1  = iComb is an Interactive Learning Module (iLM) that can help students how to solve problems in combinatorics.\
Each iComb exercise challenge the student to answer an immediately understandable question: How many? To answer this question, that is,\
providing the amount requested, the student must divide the problem in stages ("divide and conquer").

help1.1 = 1.1 Origins

help1.1p1 = iComb was inspired by software Combien?, a system developed by Université Pierre et Marie Curie - LIP6. Unlike the system Combien? The iComb can be used through Internet and can be run along side an Learning Managment System.

help1.2 = 1.2 Universes
help1.2p1 = Each iComb exercise refers to a Universe. An Universe is a set of elements that share common attributes and can be referenced by the exercises. The iComb was designed to allow multiple universes so that each exercise may be related to a different universe.

help2title = 2  Exercise

help2p1 = An iComb exercise ask the student to provide the amount of elements of the universe to comply with a series of restrictions. The universe in question should be indicated in the statement of the exercise.

help2p2 = O iComb offers the teacher the possibility to create and record exercises on a server so that students can access and answer questions over the Internet.

help2.1 = 2.1 Example Exercise
help2.1p1 = With a 32-card pack, how many five-card hands is it possible to form with exactly 2 hearts and exactly 2 spades?

help2.1p2 = In the above exercise, the Universe  is a "deck of 32 cards" and the restrictions are: "with exactly 2 cards of Hearts, and exactly two cards in Spades"

help2.2 = 2.2 Start Button
help2.2p1 = Start button, when clicked, will start the process.

help3title = 3 Help Section
help3p1 = This section will present tips to help the student as the resolution of exercise performed.

help3.1 = 3.1 Solve Exercise
help3.1p1 = "Solve Exercise" will open the section Construction and present two new buttons in the Help section: "Show the Universe" and "Help".

help3.2 = 3.2 Show Universe

help3.2p1 = "Show the Universe" button will open a new window displaying all the elements of the universe in question. The image of each element will be presented and their attributes.

help3.3 = 3.3 Help

help3.3p1 = The Help button displays the Windows Help system iComb.


help4title = 4 Construction
help4p1 = A "Construction" is a list of stages created by the student to solve the exercise. 

help4.1 = 4.1 New Stage
help4.1p1 = As the name implies, the "New Stage" button will create an empty stage in the current construction. The final construction should containt 1 or more stages. Once a new stage is setted, the student must then fill the combo boxes that are presented.

help4.2a = 4.2 Number of elements
help4.2ap1 = In response to question "I want" the student should inform the amount of elements required for this stage.

help4.2b = 4.2 Properties 
help4.2ap1 = In response to question "I want [x] elements to verify" the student should inform how many properties, or restrictions, to use in this stage. The options are none, 1 or 2 properties.

help4.3 = 4.3 Condition
help4.3p1 = A "Condition" is represented by three consecutive controls. Depending on the student's response in "Properties" combo box, no, one or two "conditions" will be presented.

help4.3p2 = A combo box "Attributes" shows which attribute the restriction should be applied.

help4.3p3 = A combo box "Relation" define what is the membership relation desired. The options are: "is", "not", "is" or "not in". 

help4.3p4 = The third control condition will be displayed in a combo box or in a simple list with multiple selection (triggered by the button with three dots) depending on the membership relation selected in the previous control. 

help4.3p5 = If two properties have been selected in the appropriate field, a new trio of controls will be presented and the student should fill them in the same way.  The two conditions will be concatenated with the logical operator "AND".

help4.4 = 4.4 Validate Stage
help4.4p1 = After Condition fulfillment, "Validate Stage" button will be enabled. At this point the student should say how many subsets of the universe may be formed in this Stage. In order to inform a quantity, the student use the formulas available in the following controls.

help4.5 = 4.5 Formula

help4.5p1 = The "formula" combo box has the options: "value", "C(n, p)", "A(n, p)", "n!", "n^p". Depending on the choosen option, one or two text boxes will be opened in response to the definition of the parameters "n" and "p". The "value" calls for a fixed value, "C (n, p)" represents the combination formula and the student should inform the values of n and p. "A (n, p)" represent the formula arrangement. The "n!" represents the factorial "n" whereas "n^p" represents the n power by p.

help4.5p2 = After informing the formula with the appropriate parameters, the student should press the button "Ok" and following the "Add Stage".

help4.6 = 4.6 Add Stage
help4.6p1 = "Add Stage" button will add the current stage in the Construction. In response to this operation, a new line will appear in "List of Stages" list box

help4.7 = 4.7 List of Stages
help4.7p1 = This list shows all the stages that make up the building. To delete a previously created stage just select it from the list and press the button "Delete Stage".

help4.8 = 4.8 Sum or Multiply
help4.8p1 = At some point the student will be confident that the defined stages are sufficient to achieve the desired solution. At this point, students should define which operations to perform, sum or multiply. Once setted the "Validate Construction" button should be pressed to complete the construction.

help4.9 = 4.9 Table of Images

help4.9p1 = The table of images is an important tool for the student visually check the result of its construction while the stages are being set. At any time, the student can click on the picture box to see a new instance of elements. These elements will comply with the construction set so far and is a great way to see if something is going wrong.

help4.10 = 4.10 Validate Construction
help4.10p1 = "Validate Construction" button will present a new screen containing a summary of the construction performed by the student.

help4.11 = 4.11 Construction Change
help4.11p1 = "Change Construction" button will return to the construction fase to the student perform any repair.

help4.12 = 4.12 I finished!
help4.12p1 = The "I finished!" burron shows the final screen. At this point the construction is completed.

help4.13 = 4.13 Evaluate Solution
help4.13p1 = The "Evaluate Solution" button will send the solution to the server.
